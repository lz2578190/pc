name: apk

on:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "nightly"

# NOTE: F-Droid builder script 'flutter/build_fdroid.sh' reads environment
# variables from this workflow!
#
# It does NOT read build steps, however, so please fix 'flutter/build_fdroid.sh
# whenever you add changes to Android CI build action ('build-rustdesk-android')
# in this file!

env:
  SCITER_RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503, also 1.78 has ABI change which causes our sciter version not working, https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  RUST_VERSION: "1.78" # sciter failed on m1 with 1.78 because of https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.19.6"
  ANDROID_FLUTTER_VERSION: "3.13.9" # >= 3.16 is very slow on my android phone, but work well on most of others. We may switch to new flutter after changing to texture rendering (I believe it can solve my problem).
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2024.07.12
  VCPKG_COMMIT_ID: "1de2026f28ead93ff1773e6e680387643e914ea1"
  VERSION: "1.3.1"
  NDK_VERSION: "r27"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  # To make a custom build with your own servers set the below secret values
  RS_PUB_KEY: "${{ secrets.RS_PUB_KEY }}"
  RENDEZVOUS_SERVER: "${{ secrets.RENDEZVOUS_SERVER }}"
  API_SERVER: "${{ secrets.API_SERVER }}"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"

jobs:
  build-rustdesk-android:
    name: build rustdesk android apk ${{ matrix.job.target }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              arch: aarch64,
              target: aarch64-linux-android,
              os: ubuntu-20.04,
              reltype: release,
              suffix: "",
            }
    steps:
      #- name: Free Disk Space (Ubuntu)
      #  uses: jlumbroso/free-disk-space@main
      #  with:
      #    tool-cache: false
      #    android: false
      #    dotnet: true
      #    haskell: true
      #    large-packages: false
      #    docker-images: true
      #    swap-storage: false

      - name: Export GitHub Actions cache environment variables
        #if: false
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc-multilib \
               git \
               g++ \
               g++-multilib \
               libappindicator3-dev \
               libasound2-dev \
               libc6-dev \
               libclang-10-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libvdpau-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               llvm-10-dev \
               nasm \
               ninja-build \
               openjdk-11-jdk-headless \
               pkg-config \
               tree \
               wget \
               zip \
               jq

      - name: Checkout source code
        uses: actions/checkout@v4

      #- name: replace Apk 
      #  shell: bash
      #  run: | 
      #    sed -i "s/RELAYSERVERIPGODER/${{ env.RELAYSERVERIPGODER }}/g" ./flutter/lib/mobile/pages/home_page.dart

      - name: Install Rust toolchain
        if: false
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        if: false
        with:
          prefix-key: bridge-${{ matrix.job.os }}

      - name: Cache Bridge
        if: false
        id: cache-bridge
        uses: actions/cache@v3
        with:
          path: /tmp/flutter_rust_bridge
          key: vcpkg-${{ matrix.job.arch }}

      - name: Install flutter
        if: false
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install flutter rust bridge deps
        shell: bash
        run: |
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid"
          pushd flutter && flutter pub get && popd

      - name: Run flutter rust bridge
        run: |
          ~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart
        
      - name: Install flutter
        if: false
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }} 
        
      - uses: nttld/setup-ndk@v1
        if: false
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true

      - name: Set up JDK 17
        if: false
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true

      - name: Setup Android SDK
        if: false
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 11076708
          packages: 'tools platform-tools'

      - name: Setup vcpkg with Github Actions binary cache
        if: false
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: /opt/artifacts/vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          ANDROID_NDK_HOME: /home/a/_tool/ndk/r27/x64
          ANDROID_NDK_ROOT: /home/a/_tool/ndk/r27/x64
          ANDROID_HOME: /root/.android/sdk
          ANDROID_SDK_ROOT: /root/.android/sdk
        run: |
          ANDROID_TARGET=arm64-v8a
          chmod u+r+x ./flutter/build_android_deps.sh
          if ! ./flutter/build_android_deps.sh "${ANDROID_TARGET}"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
        shell: bash

      - name: Install Rust toolchain
        if: false
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        if: false
        with:
          prefix-key: rustdesk-lib-cache-android # TODO: drop '-android' part after caches are invalidated
          key: ${{ matrix.job.target }}

      - name: fix android for flutter 3.13
        if: false
        run: |
          cd flutter
          sed -i 's/uni_links_desktop/#uni_links_desktop/g' pubspec.yaml
          sed -i 's/extended_text: .*/extended_text: 11.1.0/' pubspec.yaml
          flutter pub get
          cd lib
          find . | grep dart | xargs sed -i 's/textScaler: TextScaler.linear(\(.*\)),/textScaleFactor: \1,/g'

      - name: Build rustdesk lib
        env:
          ANDROID_NDK_HOME: /home/a/_tool/ndk/r27/x64
          ANDROID_NDK_ROOT: /home/a/_tool/ndk/r27/x64
          ANDROID_HOME: /root/.android/sdk
          ANDROID_SDK_ROOT: /root/.android/sdk
        run: |
          rustup target add ${{ matrix.job.target }}
          cargo install cargo-ndk --version ${{ env.CARGO_NDK_VERSION }}
          chmod u+r+x ./flutter/ndk_arm64.sh
          ./flutter/ndk_arm64.sh
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so

      - name: Build rustdesk
        shell: bash
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
          ANDROID_NDK_HOME: /home/a/_tool/ndk/r27/x64
          ANDROID_NDK_ROOT: /home/a/_tool/ndk/r27/x64
          ANDROID_HOME: /root/.android/sdk
          ANDROID_SDK_ROOT: /root/.android/sdk
        run: |
          export PATH=/usr/lib/jvm/java-11-openjdk-amd64/bin:$PATH
          # temporary use debug sign config
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/
          cp ./target/${{ matrix.job.target }}/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
          # build flutter
          pushd flutter
          flutter build apk "--${{ matrix.job.reltype }}" --target-platform android-arm64 --split-per-abi
          mv build/app/outputs/flutter-apk/app-arm64-v8a-${{ matrix.job.reltype }}.apk ../rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
          popd
          mkdir -p signed-apk; pushd signed-apk
          mv ../rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk .

        
      - name: Upload UnSignApk
        if: false
        uses: actions/upload-artifact@master
        with:
          name: UnSignApk
          path: |
            signed-apk/rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}${{ matrix.job.suffix }}.apk
